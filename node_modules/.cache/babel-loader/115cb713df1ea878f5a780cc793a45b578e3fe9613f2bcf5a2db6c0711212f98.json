{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Atharv\\\\Desktop\\\\Web_Dev\\\\React Course Udemy\\\\01-starting-setup\\\\src\\\\components\\\\ExpenseItem.js\";\nimport \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpenseItem(props) {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expense-item\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = ExpenseItem;\nexport default ExpenseItem;\n\n// to ISo Strign is used as date is object and not a string\n\n// on other hand I am sending title date and amount and so on this side I have to use similar names but say props.passed_data\n//  and recevivve props as parameter for function props is just a sword we can use any name here but convention is to use props\n\n// To create a wrapper component we can create a diffrent compoent and use us like a dic to encapsulate \n// the conetnt in between \nvar _c;\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"names":["ExpenseDate","Card","ExpenseItem","props"],"sources":["C:/Users/Atharv/Desktop/Web_Dev/React Course Udemy/01-starting-setup/src/components/ExpenseItem.js"],"sourcesContent":["import \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"./Card\";\r\n\r\nfunction ExpenseItem(props) {\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      {/* <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div> */}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n\r\n// to ISo Strign is used as date is object and not a string\r\n\r\n// on other hand I am sending title date and amount and so on this side I have to use similar names but say props.passed_data\r\n//  and recevivve props as parameter for function props is just a sword we can use any name here but convention is to use props\r\n\r\n// To create a wrapper component we can create a diffrent compoent and use us like a dic to encapsulate \r\n// the conetnt in between "],"mappings":";AAAA,OAAO,mBAAmB;AAC1B,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,QAAQ;AAAC;AAE1B,SAASC,WAAW,CAACC,KAAK,EAAE;EAC1B,oBACE,QAAC,IAAI;IAAC,SAAS,EAAC;EAAc;IAAA;IAAA;IAAA;EAAA,QAMvB;AAEX;AAAC,KAVQD,WAAW;AAYpB,eAAeA,WAAW;;AAE1B;;AAEA;AACA;;AAEA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}